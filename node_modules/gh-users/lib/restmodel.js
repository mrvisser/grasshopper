/**
 * Copyright (c) 2014 "Fronteer LTD"
 * Grasshopper Event Engine
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * @RESTModel BasicUser
 *
 * @Required  [displayName,id,type]
 * @Property  {string}                      displayName             The name of the user
 * @Property  {number}                      id                      The id of the user
 * @Property  {Picture}                     picture                 The profile picture for the user
 */

/**
 * @RESTModel FullUser
 *
 * @Required  [authenticationStrategy,createdAt,displayName,email,emailPreference,id,isAdmin,updatedAt]
 * @Property  {string}                      authenticationStrategy  The authentication strategy for the user                [local,shibboleth]
 * @Property  {string}                      createdAt               The timestamp (ISO 8601) at which the user was created
 * @Property  {string}                      displayName             The name of the user
 * @Property  {string}                      email                   The email address for the user
 * @Property  {string}                      emailPreference         The email preference for the user                       [immediate,no]
 * @Property  {number}                      id                      The id of the user
 * @Property  {boolean}                     isAdmin                 Whether the user is an app administrator
 * @Property  {Picture}                     picture                 The profile picture for the user
 * @Property  {string}                      shibbolethId            The unique shibboleth id for the user
 * @Property  {TermsAndConditionsStatus}    termsAndConditions      The status of the Terms and Conditions for the user
 * @Property  {string}                      updatedAt               The timestamp (ISO 8601) at which the user was last updated
 */

/**
 * @RESTModel Me
 *
 * @Required  [app]
 * @Property  {App}                         app                     The app the user is on
 * @Property  {boolean}                     anon                    Whether the current user is anonymous
 * @Property  {string}                      authenticationStrategy  The authentication strategy for the user                [local,shibboleth]
 * @Property  {string}                      calendarToken           The token that can be used to retrieve the user's calendar anonymously
 * @Property  {string}                      createdAt               The timestamp (ISO 8601) at which the user was created
 * @Property  {string}                      displayName             The name of the user
 * @Property  {string}                      email                   The email address for the user
 * @Property  {string}                      emailPreference         The email preference for the user                       [immediate,no]
 * @Property  {number}                      id                      The id of the user
 * @Property  {boolean}                     isAdmin                 Whether the user is an app administrator
 * @Property  {TermsAndConditionsStatus}    termsAndConditions      The status of the Terms and Conditions for the user
 * @Property  {Picture}                     picture                 The profile picture for the user
 * @Property  {string}                      signature               Signature that can be used to export a user calendar in JSON, iCal or RSS format
 * @Property  {string}                      updatedAt               The timestamp (ISO 8601) at which the user was last updated
 */

/**
 * @RESTModel TermsAndConditions
 *
 * @Required  [lastUpdate,text]
 * @Property  {number}                      lastUpdate              The timestamp (ISO 8601) at which the Terms and Conditions were last modified
 * @Property  {string}                      text                    The text for the Terms and Conditions
 */

/**
 * @RESTModel TermsAndConditionsStatus
 *
 * @Required  [accepted,needsToAccept]
 * @Property  {number}                      accepted                The timestamp (ISO 8601) at which the user accepted the Terms and Conditions
 * @Property  {boolean}                     needsToAccept           Whether the user needs to accept the Terms and Conditions before the current app can be used
 */

/**
 * @RESTModel User
 *
 * @Required  []
 * @Property  {BasicUser}                   (basicUser)             Used when the current user is not an administrator for the current app
 * @Property  {FullUser}                    (fullUser)              Used when the current user is an app administrator or the current user is the user
 */

/**
 * @RESTModel UserList
 *
 * @Required  [count,rows]
 * @Property  {number}                      count                   The total number of users in the list
 * @Property  {BasicUser[]}                 rows                    The users in the user list
 */
