/**
 * Copyright (c) 2014 "Fronteer LTD"
 * Grasshopper Event Engine
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

var _ = require('lodash');
var assert = require('assert');

/**
 * Redirect a user from an application to the SP
 *
 * @param  {String}         redirectUrl         The URL where the user should be redirect to once he succesfully authenticates
 * @param  {Function}       callback            Standard callback method
 * @param  {Object}         callback.err        An error object, if any
 * @param  {String}         callback.body       The response body
 * @param  {Object}         callback.response   The HTTP response object
 */
var assertShibbolethApplicationRedirect = module.exports.assertShibbolethApplicationRedirect = function(client, redirectUrl, callback) {
    client.auth.shibbolethApplicationRedirect(redirectUrl, function(err, body, response) {
        assert.ok(!err);

        // Verify we're being redirected to our SP
        assert.ok(_.has(response.headers, 'location'));
        assert.strictEqual(response.headers.location.indexOf('https://shib-sp.grasshopper.com'), 0);
        return callback(response);
    });
};

/**
 * Redirect a user from the SP to the IdP
 *
 * @param  {Object}         params                  The query string parameters for this endpoint
 * @param  {String}         params.tenantAlias      The alias of the tenant on which the user wants to authenticate sign on
 * @param  {String}         params.signature        The signature for the tenant alias
 * @param  {Number}         params.expires          The time in ms since epoch when the signature expires
 * @param  {Function}       callback                Standard callback method
 * @param  {Object}         callback.err            An error object, if any
 * @param  {String}         callback.body           The response body
 * @param  {Object}         callback.response       The HTTP response object
 */
var assertShibbolethSPRedirect = module.exports.assertShibbolethSPRedirect = function(client, params, callback) {
    client.auth.shibbolethSPRedirect(params, function(err, body, response) {
        assert.ok(!err);
        return callback(response);
    });
};

/**
 * The request Apache's mod_shib would make to our app server once a user authenticates
 *
 * @param  {Object}         attributes          The attributes that should be sent to the app server
 * @param  {Function}       callback            Standard callback method
 * @param  {Object}         callback.err        An error object, if any
 * @param  {String}         callback.body       The response body
 * @param  {Object}         callback.response   The HTTP response object
 */
var assertShibbolethSPCallback = module.exports.assertShibbolethSPCallback = function(client, attributes, callback) {
    client.auth.shibbolethSPRedirect(attributes, function(err, body, response) {
        assert.ok(!err);
        return callback(response);
    });
};

/**
 * Send a request to the tenant callback endpoint for Shibboleth authentication
 *
 * @param  {Object}         params              The query string parameters for this endpoint
 * @param  {String}         params.userId       The id of the user that will be signing in
 * @param  {String}         params.signature    A signature for the user id
 * @param  {Number}         params.expires      The time in ms since epoch when the signature expires
 * @param  {Function}       callback            Standard callback method
 * @param  {Object}         callback.err        An error object, if any
 * @param  {String}         callback.body       The response body
 * @param  {Object}         callback.response   The HTTP response object
 */
var assertShibbolethApplicationCallback = module.exports.assertShibbolethApplicationCallback = function(client, params, callback) {
    client.auth.shibbolethApplicationCallback(params, function(err, body, response) {
        assert.ok(!err);
        return callback(response);
    });
};
